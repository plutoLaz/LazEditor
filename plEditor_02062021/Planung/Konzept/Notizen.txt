Dokument Angelegt am Freitag dem 04.06.2021
===========================================

Es geht um die Zeilenstruktur. Ich bin überzeugt, dass hier der Schlüssel liegt.

Wie könnte die Zeilenstruktur am besten erzeugt werden? Bisher gibt es folgende Überlegungen dazu:
1. Es gibt MainBoxen. Jede MainBox hat eine eigene Zeilen Liste sowie eine eigene ContentList.  
Jede ContentList ist eine "Token" Liste. Hier werden Wörter und Grafiken abgelegt.

Jede Spalte in der Zeile hat unter anderem ein StartContent und ein EndContent, jeweils ein Pointer.
Der Content wird also vom MainContainer verwaltet.

Die Dokumentenstruktur besteht aus einer TPLDOC_Box. Jede Doc_Box kann sich selbst aufnehmen. Dadurch enrsteht eine Verschachteltestruktur.
Die ContentList wird nun nicht Verschachtelt. Nach Möglichkeit.

Aus der ContentList, wird nun die Zeilenstruktur erzeugt. Jede neue Formatierung wäre eine neue Spalte in der Aktuellen Zeile.
Eine neue Zeile wird erzeugt, beim Zeilenumbruch.

Cursor Steuerung, ein Beispiel.

Wenn der Cursor eine Zeile nach Oben bewegt werden soll, würde jetzt folgendest gemacht:
Die Autkelle Zeile, wird minus 1 genommen und die Aktuelle Left Position an den Anfang gesetzt.
Dann wird die Vorherige Aktuelle "Left" Position gesucht und die Top und Left Position neu gesetzt.
Genau wie die AKtuelle Zeile und die Aktuelel Spalte.

Ist der Anfang einer Zeilen List erreicht, müsste die vorherige MainBox mit einer ZeilenList gesucht werden.
Damit könnten die MainBoxen Verschachtelt werden.

Beim Markieren würde nun der StartContent und der EndContent auf in zwei Teile geteilt werden.
Der Hintergrund ist: Damit die Text Farbe und die Hintergrund Farbe geändert werden können.
Die Schrift Größe, wird nicht verändert. Im Prinzip könnte auch schon die Hintergrund Farbe reichen. Das wäre dann sogar einfacher.
Denn es müsste nur ein gefülltes Rechteck hinter dem Text gezeichnet werden, mehr nicht.

Die Zeilenstruktur wird nun so erstellt, pro MainBox:
Es gibt die Methode Layout, die wird mit einer MainBox aufgerufen. Z.B. der RootMainBox.
In der Layout Methode, werden nun die ChildBoxen der reihe nach durchgegangen.

Es muss noch eine zweite Layout Methode geben, die die eigentliche Zeilenstruktur erstellt.

Wie wäre es, wenn jede Mainbox eine Methode hat, wie etwa CreateLineList?

In der Layout vom TPLDocument, werden nun die CreateLineList der jeweiligen MainBoxen aufgerufen.
Die MainBox könnte mit z.b. der RootBox verbunden sein. In der RootBox wird nun die Breite und die Höhe gesetzt.
Bei CreateLineList, wäre jetzt die Breite in der Regel von Bedeutung. Für den Automatischen Zeilenumbruch.

Wie würde das bei Tabellen aussehen? Die Spalten einer Tabellen Zeilen sind ja auch MainBoxen. Diese MainBoxen sind nun mit der Tabelle verbunden.
Die Tabelle ist wiederum mit der RootBox bzw. mit einer OwnerBox verbunden.

Im Moment gehe ich davon aus, dass es eine Tabelle als MainBox geben wird. Somit würde die ContentList stören. Eine Tabelle, hat ja keinen Content.


2. Es gibt eine Zentrale Zeilenstruktur. Jede MainBox erzeugt eine Zeile mit Spalte. 
Jede Spalte hat eine LineList.

Die ContainerList könnte entweder Zentral in der RootBox oder aber Local in der MainBox verwaltet werden.
Die MainBox müsste dann ebenfalls ein StartContent und ein EndContent haben, jeweils als Pointer.

In der Layout Methode von TPLDocument, müsste jetzt pro MainBox eine Zeile ereugt werden. In jeder Zeile kommmt mind. eine Spalte.
Die MainBoxen könnte jetzt auch eine eigene Layout Methode haben. Für die Cursor Steuerung dürfte das Egal sein.
Wichtig wäre das ja nur, beim erzeugen der LineList.

3. Ich frage mich auch, ob ein 2D Array sinn machen würde bzw. auch ob das umsetztbar wäre.

In einem 2D Array würde ja immer gleichghroße Objekte gespeichert, weil dann eine leichter zugriff möglich ist. Über Y und X.
In meinem Fall, wäre die Objekte aber unterschiedlich groß.
Würde ein 2D Array Vorteile bringen? Wie könnte ich ihn aufbauen? Wie verhält es sich bei Tabellen und Listen.

Die TPLDoc_Box Struktur würde es ja in jedem Fall geben. D.H. aus der Baumstruktur müsste jetzt ein 2D Array erzeugt werden.
Im Prinzip wäre das doch die Zeilenstruktur oder? Naja, es wäre stark vereinfacht.
